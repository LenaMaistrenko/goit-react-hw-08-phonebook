{"version":3,"file":"static/js/447.425cc254.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","redux/ContactsSlice/selectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["import { Watch } from 'react-loader-spinner';\nexport function Loader() {\n  return (\n    <Watch\n      height=\"10\"\n      width=\"10\"\n      radius=\"48\"\n      color=\"#4fa94d\"\n      ariaLabel=\"watch-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n  //   return <Loader type=\"Watch\" height={100} width={100} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formlabel\":\"ContactForm_formlabel__A1oPk\",\"forminput\":\"ContactForm_forminput__Mozbj\",\"contactform\":\"ContactForm_contactform__1wuxY\",\"addbtn\":\"ContactForm_addbtn__ySsGH\"};","import { useRef } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addContactRequest } from 'redux/ContactsSlice/ContactSlice';\n\nexport function ContactForm({ onSubmit }) {\n  const dispatch = useDispatch();\n  const nameInputRef = useRef();\n  const phoneInputRef = useRef();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = {\n      name: nameInputRef.current.value,\n      number: phoneInputRef.current.value,\n    };\n    dispatch(addContactRequest(formData));\n    event.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactform}>\n      <label className={css.formlabel}>\n        Name :\n        <input\n          className={css.forminput}\n          type=\"text\"\n          name=\"name\"\n          placeholder={'Input name'}\n          ref={nameInputRef}\n          required\n        />\n      </label>\n      <label className={css.formlabel}>\n        Number :\n        <input\n          className={css.forminput}\n          type=\"tel\"\n          name=\"number\"\n          placeholder={'Input phone number'}\n          ref={phoneInputRef}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.addbtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"btndelete\":\"ContactList_btndelete__8hkR8\"};","//export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectContactStatus = state => state.contacts.status;\nexport const selectContactError = state => state.contacts.error;\n","import css from '../ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport {\n  deleteContactRequest,\n  getContactsRequest,\n} from 'redux/ContactsSlice/ContactSlice';\nimport { selectContacts } from 'redux/ContactsSlice/selectors';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsRequest());\n  }, [dispatch]);\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {filterContacts?.map(item => (\n        <li className={css.contactItem} key={item.id}>\n          {item.name}\n          <span>{item.number}</span>\n          <button\n            id={item.id}\n            onClick={() => dispatch(deleteContactRequest(item.id))}\n            className={css.btndelete}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterlabel\":\"Filter_filterlabel__bhWzn\",\"filterinput\":\"Filter_filterinput__Rk5X8\"};","import css from '../Filter/Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleFilterChange = e => {\n    dispatch(addFilter(e.target.value));\n  };\n  return (\n    <label className={css.filterlabel}>\n      FIND CONTACTS BY NAME\n      <input\n        className={css.filterinput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactspagetitle\":\"ContactsPage_contactspagetitle__DlPyg\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContact } from '../../redux/contactsOperations';\nimport css from './ContactsPage.module.css';\n\nimport {\n  selectContactStatus,\n  selectContacts,\n} from 'redux/ContactsSlice/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { getContactsRequest } from 'redux/ContactsSlice/ContactSlice';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const status = useSelector(selectContactStatus);\n\n  const handleSubmit = formData => {\n    dispatch(addContact(formData));\n  };\n\n  useEffect(() => {\n    dispatch(getContactsRequest());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1 className={css.contactspagetitle}>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n      {status === 'pending' && <Loader />}\n      <h2 className={css.contactspagetitle}>Contacts</h2>\n      {contacts?.length > 0 && <Filter />}\n      {contacts?.length > 0 && <ContactList />}\n\n      {/* <Filter />\n      <ContactList /> */}\n    </div>\n  );\n}\nexport default WithAuthRedirect(ContactsPage, '/login');\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/UserSlice/selectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactForm","onSubmit","dispatch","useDispatch","nameInputRef","useRef","phoneInputRef","event","preventDefault","formData","name","current","value","number","addContactRequest","target","reset","className","css","type","placeholder","ref","required","pattern","title","selectFilter","state","filter","selectContacts","contacts","items","selectContactStatus","status","ContactList","useEffect","getContactsRequest","useSelector","filterContacts","contact","toLowerCase","trim","includes","map","item","id","onClick","deleteContactRequest","Filter","onChange","e","addFilter","Component","navigateTo","props","selectIsLoggedIn","to","addContact","length"],"sourceRoot":""}