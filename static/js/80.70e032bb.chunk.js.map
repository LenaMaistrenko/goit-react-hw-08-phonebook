{"version":3,"file":"static/js/80.70e032bb.chunk.js","mappings":"iMACO,SAASA,IACd,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAId,C,kFCdD,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA4F,6BAA5F,EAAmI,2B,sCC0DnI,MApDA,YAAkC,IAAbC,EAAY,EAAZA,SACbC,GAAgBC,EAAAA,EAAAA,UAChBC,GAAmBD,EAAAA,EAAAA,UACnBE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAY3B,OACE,kBAAMC,UAAWC,EAAUR,SAXR,SAAAS,GACnBA,EAAMC,iBACN,IAAMC,EAAW,CACfC,MAAOX,EAAcY,QAAQC,MAC7BC,SAAUZ,EAAiBU,QAAQC,OAErCd,EAASW,GAETF,EAAMO,OAAOC,OACd,EAEoDC,aAAa,MAAhE,WACE,mBAAOX,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXW,KAAK,QACLC,KAAK,QACLC,YAAa,cACbC,IAAKrB,QAGT,mBAAOM,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXW,KAAK,WACLC,KAAK,WACLC,YAAa,iBACbC,IAAKnB,QAGT,oBACEI,UAAWC,EACXW,KAAK,SACLI,SAAqB,YAAXnB,EAHZ,UAKc,YAAXA,IAAwB,SAACb,EAAA,EAAD,IAL3B,eASL,E,8BC7Cc,SAASiC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAatB,EAAAA,EAAAA,IAAYuB,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACHJ,GACLE,EAAS,YACV,GAAE,CAACF,EAAYE,IAKhB,OACE,+BACE,8BACE,4BACE,eAAItB,UAAWC,EAAAA,EAAAA,QAAf,wBACA,SAAC,EAAD,CAAWR,SATC,SAAAW,GAClBc,GAASO,EAAAA,EAAAA,IAAarB,IACtBsB,QAAQC,IAAIvB,EACb,UAWF,C","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/Forms/LoginForm/LoginForm.module.css?de01","Forms/LoginForm/LoginForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["import { Watch } from 'react-loader-spinner';\nexport function Loader() {\n  return (\n    <Watch\n      height=\"10\"\n      width=\"10\"\n      radius=\"48\"\n      color=\"#4fa94d\"\n      ariaLabel=\"watch-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n  //   return <Loader type=\"Watch\" height={100} width={100} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__KeB8j\",\"label\":\"LoginForm_label__FCZ2n\",\"forminput\":\"LoginForm_forminput__yqs7V\",\"formbtn\":\"LoginForm_formbtn__51OdR\"};","import { useRef } from 'react';\nimport css from './LoginForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectStatus } from 'redux/UserSlice/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction LoginForm({ onSubmit }) {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = {\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input\n          className={css.forminput}\n          type=\"email\"\n          name=\"email\"\n          placeholder={'Input email'}\n          ref={emailInputRef}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          className={css.forminput}\n          type=\"password\"\n          name=\"password\"\n          placeholder={'Input password'}\n          ref={passwordInputRef}\n        />\n      </label>\n      <button\n        className={css.formbtn}\n        type=\"submit\"\n        disabled={status === 'pending'}\n      >\n        {status === 'pending' && <Loader />} Log In\n      </button>\n    </form>\n  );\n}\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import LoginForm from 'Forms/LoginForm/LoginForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginRequest } from 'redux/UserSlice/UserSlice';\nimport { selectIsLoggedIn } from 'redux/UserSlice/selectors';\nimport css from '../../components/Layout/Layout.module.css';\n\nexport default function LogInPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n  const handleLogIn = formData => {\n    dispatch(loginRequest(formData));\n    console.log(formData);\n  };\n  return (\n    <>\n      <section>\n        <div>\n          <h1 className={css.navtext}>LogInPage</h1>\n          <LoginForm onSubmit={handleLogIn} />\n        </div>\n      </section>\n    </>\n  );\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","onSubmit","emailInputRef","useRef","passwordInputRef","status","useSelector","selectStatus","className","css","event","preventDefault","formData","email","current","value","password","target","reset","autoComplete","type","name","placeholder","ref","disabled","LogInPage","dispatch","useDispatch","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","useEffect","loginRequest","console","log"],"sourceRoot":""}